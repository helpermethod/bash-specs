before_each() {
  create_mock f
}

describe 'create_mock'

_() {
    local function_definition=$(declare -f f)
    local mock_definition=$(declare -f __mock)

    expect "${function_definition#*)}" to_equal "${mock_definition#*)}"
}

it 'should replace a function by a mock' _

describe 'mock_return_value'

_() {
  mock_return_value f 1

  f
  expect "$?" to_equal 1 || return
  f
  expect "$?" to_equal 1
}

it 'should set the default return value' _

describe 'mock_return_value_once'

_() {
  mock_return_value_once f 1

  f
  expect "$?" to_equal 1 || return
  f
  expect "$?" not to_equal 1
}

it 'should set the return value for the next call' _
